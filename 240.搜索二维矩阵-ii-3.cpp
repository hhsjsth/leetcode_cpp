#include "header.h"

/*
 * @lc app=leetcode.cn id=240 lang=cpp
 *
 * [240] 搜索二维矩阵 II
 */

// 参考 LeetCode 官方 3
/*

我们要找到一个地方, 从这个地方开始搜索, 并且这个地方必须满足这个要求: 当确定了目标值比这个值大, 只能走一个方向; 但确定的目标值比这个值小, 只能走另外一个方向.
我们可以看到, 除了 15 和 18 两个位置以外, 其他地方就算确定了目标值与自己的大小, 也无法确定一个方向, 比如说 4, 确定了目标值比他大之后, 有可能需要向右搜索也有可能需要向下搜索.

| 1   | 4   | 7   | 11  | 15  |
| 2   | 5   | 8   | 12  | 19  |
| 3   | 6   | 9   | 16  | 22  |
| 10  | 13  | 14  | 17  | 24  |
| 18  | 21  | 23  | 26  | 30  |

因此我们以 15 为例, 目标值为 17, 比 15 大, 则只能继续向下搜索, 也相当于左边的值全部忽视掉了, 以后也不可能搜索到他们了


|     |     |     |     | 15  |
| 2   | 5   | 8   | 12  | 19  |
| 3   | 6   | 9   | 16  | 22  |
| 10  | 13  | 14  | 17  | 24  |
| 18  | 21  | 23  | 26  | 30  |

继续, 如果目标值比 19 小, 那么只能继续向左搜索, 相当于下面的值被忽略掉了

|     |     |     |     | 15  |
| 2   | 5   | 8   | 12  | 19  |
| 3   | 6   | 9   | 16  |     |
| 10  | 13  | 14  | 17  |     |
| 18  | 21  | 23  | 26  |     |

|     |     |     |     | 15  |
|     |     |     | 12  | 19  |
| 3   | 6   | 9   | 16  |     |
| 10  | 13  | 14  | 17  |     |
| 18  | 21  | 23  | 26  |     |

|     |     |     |     | 15  |
|     |     |     | 12  | 19  |
|     |     |     | 16  |     |
| 10  | 13  | 14  | 17  |     |
| 18  | 21  | 23  | 26  |     |

一步步剔除掉忽略的值, 就能得到这个搜索路径, 搜索路径的终点就能查找到这个数或者明确这个数不存在.

*/
// 看评论说: 典型的杨氏矩阵查找，诸位在做双指针求两数之和=sum的时候就已经见识过了。
// @lc code=start
class Solution {
  public:
    bool searchMatrix(vector<vector<int>> &matrix, int target) {
        int m = matrix.size(), n = matrix[0].size();
        int x = 0, y = n - 1;
        while (x < m && y >= 0) {
            if (matrix[x][y] == target) {
                return true;
            }
            if (matrix[x][y] > target) {
                --y;
            } else {
                ++x;
            }
        }
        return false;
    }
};

// @lc code=end
